name: Build Alpine Core
run-name: Alpine Core - ${{ github.actor }} by ${{ github.event_name }} ${{ github.ref }}
on:
  workflow_dispatch:
  push:
    branches:
      - "main"
    paths:
      - "**"
      - "!README.md"
      - "!.github/**"
  pull_request:
    branches:
      - "main"
    paths:
      - "**"
      - "!README.md"
      - "!.github/**"
jobs:
  get-version:
    runs-on: arc-runner-set
    name: Tag new version
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Git Semantic Version
        uses: PaulHatch/semantic-version@v5.4.0
        id: version

      - name: Echo Version
        run: echo "Version would be ${{ steps.version.outputs.version }}"

      - name: Tag Release (vX.Y.Z)
        if: ${{ (github.event_name != 'pull_request') }}
        run: |
          git tag ${{ steps.version.outputs.version_tag }}
          git push origin ${{ steps.version.outputs.version_tag }}

  docker-push:
    name: Push to DockerHub
    needs: [get-version]
    runs-on: arc-runner-set
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Master Branch
        uses: docker/build-push-action@v3
        if: ${{ (github.event_name != 'pull_request') }}
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          tags: faliarin/alpine-core:latest,faliarin/alpine-core:${{ needs.get-version.outputs.version }}
          provenance: mode=max
          sbom: true

  github-push:
    runs-on: arc-runner-set
    needs: [get-version]
    name: Push to github packages
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GITHUB_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Master Branch
        uses: docker/build-push-action@v3
        if: ${{ (github.event_name != 'pull_request') }}
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.GITHUB_REGISTRY }}/${{ env.IMAGE_NAME }}:latest,${{ env.GITHUB_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ needs.get-version.outputs.version }}
          provenance: mode=max
          sbom: true
